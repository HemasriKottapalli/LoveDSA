#include <iostream>
#include<vector>
using namespace std;
//pivot
int findPivot(vector<int> arr)
{
 int s=0;
  int e=arr.size()-1;
  int mid=s+(e-s)/2;

  while(s<=e)
  {
    if(s==e)
    {
      return s;
    }
    else if(mid+1<e && arr[mid]>arr[mid+1])
    {
       return mid;
    }
     else if(mid-1>s && arr[mid-1]>arr[mid])
    {
       return mid-1;
    }
    if(arr[mid]<arr[s])
    {
      e=mid-1;
    }
    else{
      s=mid+1;
    }
    mid=s+(e-s)/2;
  }
  return -1;
}
//Bs
int binarySearch(vector<int> arr, int target, int start,int end)
{
    int mid =start+(end-start)/2;

    while(start<end)
    {
        if(arr[mid]==target)
        {
            return mid;
        }
        else if(arr[mid]>target)
        {
            start=mid+1;
        }
        else {
            end=mid-1;
        }
        mid=start+(end-start)/2;
    }
    
}

int main() {
   vector<int> arr{9,10,2,4,6,8};
   int target = 6;
   int ans;
   int pivot = findPivot(arr);
   if(target>=arr[0] && target<=arr[pivot])
   {
      ans = binarySearch(arr,target,0,pivot);
   }
   else {
      ans = binarySearch(arr,target,pivot+1,arr.size());
   }
   cout<<"found at index: "<<ans;
  return 0;
}